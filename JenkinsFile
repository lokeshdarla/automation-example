pipeline {
    agent any

    tools {
        maven:'Maven'
    }

    stages {
        stage('Check Git Installation') {
            steps {
                script {
                    // Check if Git is installed
                    def gitInstalled = sh(script: 'git --version', returnStatus: true)
                    if (gitInstalled != 0) {
                        echo 'Git is not installed, attempting to install...'
                        sh 'brew install git' // If you're on macOS, you can use Homebrew, modify if you're on Linux
                    } else {
                        echo 'Git is already installed.'
                    }
                }
            }
        }

        stage('Checkout') {
            steps {
                // Checkout the code from the Git repository
                git 'https://github.com/your-repository/maven-java-app.git'
            }
        }

        stage('Check Maven Installation') {
            steps {
                script {
                    // Check if Maven is installed
                    def mavenInstalled = sh(script: '${MAVEN_HOME}/bin/mvn --version', returnStatus: true)
                    if (mavenInstalled != 0) {
                        echo 'Maven is not installed, attempting to install...'
                        sh 'brew install maven'  // If you're on macOS, use Homebrew, modify for Linux if necessary
                    } else {
                        echo 'Maven is already installed.'
                    }
                }
            }
        }

        stage('Build and Test') {
            steps {
                // Run Maven build and tests (includes compilation, testing, etc.)
                sh "${MAVEN_HOME}/bin/mvn clean test"
            }
        }

        stage('Archive Test Results') {
            steps {
                // Archive test results in JUnit format
                junit '**/target/surefire-reports/*.xml'
            }
        }

        stage('Clean Up') {
            steps {
                // Clean up the build artifacts (optional)
                sh "${MAVEN_HOME}/bin/mvn clean"
            }
        }
    }

    post {
        always {
            // This will be run after the pipeline completes (whether success or failure)
            echo 'Pipeline execution completed.'
        }

        success {
            echo 'Tests ran successfully!'
        }

        failure {
            echo 'Test case execution failed!'
        }
    }
}
